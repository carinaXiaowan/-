cookie

作用： 用来跟踪浏览器用户身份的会话方式
保存位置：cookie保存在浏览器端
使用方式：
设置过期时间，将被保存在内存中，浏览器关闭就结束缓存
不设置过期时间，将被保存在硬盘中，直到过期时间到期才消失，在这期间，就算浏览器关闭也还是在的
服务器发给客户端的特殊信息，文本的方式保存在客户端，然后客户端保存再发送给服务端
存储内容：cookie只能保存字符串类型，以文本的方式
存储的大小： 单个cookie保存的数据不能超过4kb
应用场景：
判断用户是否登陆过网站，以便下次登录时能够实现自动登录（或者记住密码）
保存上次登录的时间等信息
保存上次查看的页面
浏览计数
缺陷：
大小有限
浪费带宽 
session

作用： 用来跟踪浏览器用户身份的会话方式
保存位置：session保存在服务器端
使用方式：
服务器收到请求需要创建session对象时，先会检查客户端请求中是否包含sessionid，
有sessionid，服务器将根据该id返回对应session对象
没有sessionid，服务器会创建新的session对象，并把sessionid在本次响应中返回给客户端
通常使用cookie方式存储sessionid到客户端，在交互中浏览器按照规则将sessionid发送给服务器
当浏览器不支持Cookie的时候，将会重写URL将SessionID拼接到访问地址后
存储内容：通过类似与Hashtable的数据结构来保存，能支持任何类型的对象(session中可含有多个对象)
存储的大小：无限制
应用场景
网上商城中的购物车
保存用户登录信息
将某些数据放入session中，供同一用户的不同页面使用
防止用户非法登录
缺陷
Session保存的东西越多，就越占用服务器内存，对于用户在线人数较多的网站，服务器的内存压力会比较大。
依赖于cookie（sessionID保存在cookie），如果禁用cookie，则要使用URL重写，不安全
创建Session变量有很大的随意性，可随时调用，不需要开发者做精确地处理，所以，过度使用session变量将会导致代码不可读而且不好维护
